
services:
  # === DATA LAYER ===
  redis:
    image: redis:7-alpine
    container_name: synapse_redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - synapse_network

  postgres:
    image: postgres:15-alpine
    container_name: synapse_postgres
    environment:
      POSTGRES_DB: synapse
      POSTGRES_USER: synapse
      POSTGRES_PASSWORD: synapse123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - synapse_network

  # === CORE SERVICES ===
  gateway:
    build:
      context: .
      dockerfile: services/gateway/Dockerfile
    container_name: synapse_gateway
    ports:
      - "8080:8080"
    environment:
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://synapse:synapse123@postgres:5432/synapse
      - ENVIRONMENT=development
    depends_on:
      - redis
      - postgres
    volumes:
      - ./services/gateway:/app/service
      - ./shared:/app/shared
    networks:
      - synapse_network

  dispatcher:
    build:
      context: .
      dockerfile: services/dispatcher/Dockerfile
    container_name: synapse_dispatcher
    environment:
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://synapse:synapse123@postgres:5432/synapse
    depends_on:
      - redis
      - postgres
      - gateway
    volumes:
      - ./services/dispatcher:/app/service
      - ./shared:/app/shared
    networks:
      - synapse_network

  aggregator:
    build:
      context: .
      dockerfile: services/aggregator/Dockerfile
    container_name: synapse_aggregator
    environment:
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://synapse:synapse123@postgres:5432/synapse
    depends_on:
      - redis
      - postgres
    volumes:
      - ./services/aggregator:/app/service
      - ./shared:/app/shared
    networks:
      - synapse_network

  node:
    build:
      context: .
      dockerfile: services/node/Dockerfile
    container_name: synapse_node
    environment:
      - GATEWAY_URL=http://gateway:8080
      - NODE_ID=node-001
      - REGION=eu-west-1
    depends_on:
      - gateway
      - dispatcher
    volumes:
      - ./services/node:/app/service
      - ./shared:/app/shared
      - /dev:/dev:ro
    privileged: true
    networks:
      - synapse_network

  # === MONITORING ===
  prometheus:
    image: prom/prometheus:latest
    container_name: synapse_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - synapse_network

  grafana:
    image: grafana/grafana:latest
    container_name: synapse_grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - synapse_network

  # === LOAD BALANCER ===
  nginx:
    image: nginx:alpine
    container_name: synapse_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - gateway
    networks:
      - synapse_network

volumes:
  redis_data:
  postgres_data:
  prometheus_data:
  grafana_data:

networks:
  synapse_network:
    driver: bridge
